[sccm_status_message_dbinput]
connection = sccm
disabled = 0
index = test
index_time_mode = dbColumn
input_timestamp_column_number = 2
interval = */30 * * * *
max_rows = 10000
mode = rising
query = WITH attr AS \
(SELECT recordid,\
   [400] AS [packageid],\
   [401] AS [advertisementid],\
   [402] AS [collectionid],\
   [403] AS [username],\
   [404] AS [dp],\
   [405] AS [policyid],\
   [406] AS [policyassignmentid],\
   [407] AS [meter_ruleid],\
   [408] AS [client_sms_uniqueid],\
   [409] AS [site_code],\
   [410] AS [package_version],\
   [411] AS [time_key],\
   [412] AS [unique_updateid],\
   [413] AS [productid],\
   [414] AS [ci_assignmentid],\
   [415] AS [objectid],\
   [416] AS [object_type],\
   [417] AS [sdm_typeid],\
   [418] AS [sdm_type_version],\
   [419] AS [update_source_uniqueid],\
   [420] AS [collection_extended_propsid],\
   [421] AS [wol_object_type],\
   [422] AS [wol_batchid],\
   [423] AS [machine_extended_propsid],\
   [424] AS [wol_num_requests],\
   [425] AS [unknown_machine],\
   [426] AS [mac_addresses],\
   [427] AS [smbiosid]\
FROM \
        (Select RecordId, AttributeId, AttributeValue from v_StatMsgAttributes) as s\
        PIVOT (MAX(AttributeValue) \
                FOR [AttributeId] IN ([400], [401], [402], [403], [404], [405], [406], [407], [408], [409], [410], [411], [412], \
                [413], [414], [415], [416], [417], [418], [419], [420], [421], [422], [423], [424], [425], [426], [427])) as piv\
)\
SELECT msg.recordid,\
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), msg.[time] ), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) As [timestamp],\
  msg.[time] as [timestamputc],\
  msg.messageid,\
  severity = \
    CASE msg.severity\
      WHEN 1073741824 THEN 'informational'\
        WHEN -1073741824 THEN 'error'\
       WHEN -2147483648 THEN 'warning'\
    END,\
  msg.severity AS severityid,\
  msg.machinename,\
  msg.sitecode,\
  msg.modulename,\
  msg.component,\
  replace(strings.insstring1,'"','') as string1,\
  replace(strings.insstring2,'"','') as string2,\
  replace(strings.insstring3,'"','') as string3,\
  replace(strings.insstring4,'"','') as string4,\
  replace(strings.insstring5,'"','') as string5,\
  replace(strings.insstring6,'"','') as string6,\
  replace(strings.insstring7,'"','') as string7,\
  replace(strings.insstring8,'"','') as string8,\
  replace(strings.insstring9,'"','') as string9,\
  replace(strings.insstring10,'"','') as string10,\
  packageid, \
  advertisementid, \
  collectionid, \
  username, \
  replace(dp,'"','') as dp, \
  policyid, \
  policyassignmentid, \
  meter_ruleid, \
  client_sms_uniqueid, \
  site_code, \
  package_version, \
  time_key, \
  unique_updateid, \
  productid, \
  ci_assignmentid, \
  objectid, \
  object_type, \
  sdm_typeid, \
  sdm_type_version, \
  update_source_uniqueid, \
  collection_extended_propsid, \
  wol_object_type, \
  wol_batchid, \
  machine_extended_propsid, \
  wol_num_requests, \
  unknown_machine, \
  mac_addresses, \
  smbiosid \
FROM "Catalog"."dbo"."v_StatusMessage" msg\
LEFT JOIN "Catalog"."dbo"."v_StatMsgWithInsStrings" strings\
on msg.recordid = strings.recordid\
LEFT JOIN attr\
on msg.recordid = attr.recordid\
WHERE msg.recordid > ?\
ORDER BY msg.recordid
query_timeout = 300
sourcetype = sccm:status_message
tail_rising_column_init_ckpt_value = {"value":"0","columnType":-5}
tail_rising_column_name = recordid
tail_rising_column_number = 1

[sccc_resource_dbinput]
connection = sccm
disabled = 0
index = test
index_time_mode = dbColumn
input_timestamp_column_number = 1
interval = * * * * * *
max_rows = 10000
mode = rising
query = SELECT \
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), COALESCE(lastactivetime, disc.lastdiscoverytime)), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as [timestamp],\
  machineid as resourceid, \
  CASE architecturekey\
    WHEN 5 THEN 'system'\
      WHEN 2 THEN 'unknown system'\
  END as resource_type, \
  name, \
  smsid, \
  sitecode, \
  domain, \
  clientedition, \
  clienttype, \
  clientversion, \
  isclient, \
  isobsolete, \
  isactive, \
  isvirtualmachine, \
  isaoaccapable, \
  deviceowner, \
  suppressautoprovision, \
  isapproved, \
  isblocked, \
  isalwaysinternet, \
  isinternetenabled, \
  clientcerttype, \
  username, \
  lastclientchecktime, \
  clientcheckpass, \
  adsitename, \
  userdomainname, \
  adlastlogontime as adlastlogontime_epoch, \
  clientremediationsuccess, \
  clientactivestatus, \
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), laststatusmessage), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as laststatusmessage_epoch,\
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), lastpolicyrequest), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as lastpolicyrequest_epoch,\
  lastddr as lastddr_epoch, \
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), lasthardwarescan), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as lasthardwarescan_epoch,\
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), lastsoftwarescan), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as lastsoftwarescan_epoch,\
  lastmpservername, \
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), COALESCE(lastactivetime, disc.lastdiscoverytime)), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as lastactivetime_epoch,\
  cp_status, \
  cp_latestprocessingattempt, \
  cp_lastinstallationerror, \
  deviceos, \
  ep_deploymentstate, \
  ep_deploymenterrorcode, \
  ep_deploymentdescription, \
  ep_policyapplicationstate, \
  ep_policyapplicationerrorcode, \
  ep_policyapplicationdescription, \
  ep_enabled, \
  ep_clientversion, \
  ep_productstatus, \
  ep_engineversion, \
  ep_antivirusenabled, \
  ep_antivirussignatureversion, \
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), ep_antivirussignatureupdatedatetime), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as ep_antivirussignatureupdatedatetime_epoch,\
  ep_antispywareenabled, \
  ep_antispywaresignatureversion, \
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), ep_antispywaresignatureupdatedatetime), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as ep_antispywaresignatureupdatedatetime_epoch,\
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), ep_lastfullscandatetimestart), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as ep_lastfullscandatetimestart_epoch,\
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), ep_lastfullscandatetimeend), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as ep_lastfullscandatetimeend_epoch,\
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), ep_lastquickscandatetimestart), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as ep_lastquickscandatetimestart_epoch,\
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), ep_lastquickscandatetimeend), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as ep_lastquickscandatetimeend_epoch,\
  ep_infectionstatus, \
  ep_pendingfullscan, \
  ep_pendingreboot, \
  ep_pendingmanualsteps, \
  ep_pendingofflinescan, \
  convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), ep_lastinfectiontime), DATENAME(TzOffset, SYSDATETIMEOFFSET()))) as ep_lastinfectiontime_epoch,\
  ep_lastthreatname, \
  unknown \
FROM "Catalog"."dbo"."v_CombinedDeviceResources"\
INNER JOIN (\
  select \
  ResourceId, \
  max(agenttime) as lastdiscoverytime\
FROM "Catalog"."dbo"."v_AgentDiscoveries" group by ResourceId) as disc\
  on disc.ResourceId = "Catalog"."dbo"."v_CombinedDeviceResources".machineid \
WHERE convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), COALESCE(lastactivetime, disc.lastdiscoverytime)), DATENAME(TzOffset, SYSDATETIMEOFFSET())))  > ?\
ORDER BY convert(datetime,SWITCHOFFSET(CONVERT(DATETIMEOFFSET(3), COALESCE(lastactivetime, disc.lastdiscoverytime)), DATENAME(TzOffset, SYSDATETIMEOFFSET())))
sourcetype = sccm:resource
tail_rising_column_init_ckpt_value = {"value":"1970-01-01 00:00:00.000","columnType":93}
tail_rising_column_name = timestamp
tail_rising_column_number = 1

[sccm_agent_discoveries_dbinput]
connection = sccm
disabled = 0
index = test
index_time_mode = dbColumn
input_timestamp_column_number = 1
interval = * * * * * *
max_rows = 10000
mode = rising
query = select \
  da.agenttime,\
  disc.resourceid, \
  disc.netbios_name0 as name, \
  da.agentname\
from "Catalog"."dbo"."v_R_System" disc\
left join "Catalog"."dbo"."v_AgentDiscoveries" da\
  on da.resourceid = disc.resourceid\
  where AgentTime > ?\
ORDER BY AgentTime
sourcetype = sccm:discovery
tail_rising_column_init_ckpt_value = {"value":"1970-01-01 00:00:00.000","columnType":93}
tail_rising_column_name = agenttime
tail_rising_column_number = 1

[sccm_installed_software_dbinput]
connection = sccm
disabled = 0
index = test
index_time_mode = dbColumn
input_timestamp_column_number = 1
interval = * * * * * *
max_rows = 10000
mode = rising
query = WITH MYQUERY AS\
(select \
 [timestamp],\
  resourceid,\
  active=1,\
  softwarepropertieshash0,\
  softwarepropertieshashex0,\
  normalizedname as product_name,\
  normalizedversion as product_version,\
  normalizedpublisher as product_publisher,\
  InstallDate0 as installation_date,\
  categoryname as category,\
  familyname as family\
from "Catalog"."dbo"."v_gs_installed_software_categorized"\
UNION ALL\
select\
  s.[timestamp],\
  s.resourceid,\
  active=0,\
  s.softwarepropertieshash0,\
  s.softwarepropertieshashex0,\
  coalesce (sl.commonname, s.productname0) as product_name,\
  coalesce (sl.commonpublisher, s.publisher0) as product_publisher,\
  coalesce (sl.commonversion, s.productversion0) as product_version,\
  installdate0 as installation_date,\
  fam.familyname,\
  cat.categoryname\
from "Catalog"."dbo"."v_hs_installed_software" s\
left outer join  "Catalog"."dbo"."v_lu_softwarehash" sh\
   on sh.softwarepropertieshash = s.softwarepropertieshash0\
left outer join "Catalog"."dbo"."v_lu_softwarelist" sl\
  on sl.softwareid = sh.softwareid\
inner join "Catalog"."dbo"."v_lu_category" as cat\
  on cat.categoryid = coalesce(sl.categoryid, 4892)\
inner join "Catalog"."dbo"."v_lu_family" as fam\
  on fam.familyid = coalesce(sl.familyid, 4891)\
where softwarepropertieshash0 is not null\
)\
\
SELECT * from MyQuery WHERE [timestamp] > ?\
ORDER BY [timestamp]\

sourcetype = sccm:installed_software
tail_rising_column_init_ckpt_value = {"value":"1970-01-01 00:00:00.000","columnType":93}
tail_rising_column_name = timestamp
tail_rising_column_number = 1
